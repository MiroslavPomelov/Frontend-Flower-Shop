// –ü—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è Timeweb Cloud
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –∏—Ö —Å–∏—Å—Ç–µ–º–æ–π

const http = require('http');
const fs = require('fs');
const path = require('path');

const PORT = process.env.PORT || 3000;

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä
const server = http.createServer((req, res) => {
    console.log(`üå∏ –ó–∞–ø—Ä–æ—Å: ${req.method} ${req.url}`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º CORS
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
    
    if (req.method === 'OPTIONS') {
        res.writeHead(200);
        res.end();
        return;
    }
    
    let filePath = req.url === '/' ? '/index.html' : req.url;
    let fullPath = path.join(__dirname, 'flower-shop', filePath);
    
    console.log(`üîç –ò—â–µ–º —Ñ–∞–π–ª: ${fullPath}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (fs.existsSync(fullPath) && fs.statSync(fullPath).isFile()) {
        const ext = path.extname(fullPath);
        const contentType = {
            '.html': 'text/html; charset=utf-8',
            '.css': 'text/css',
            '.js': 'text/javascript',
            '.png': 'image/png',
            '.jpg': 'image/jpeg',
            '.gif': 'image/gif',
            '.ico': 'image/x-icon',
            '.json': 'application/json'
        }[ext] || 'text/plain';
        
        console.log(`‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: ${filePath} (${contentType})`);
        
        try {
            const content = fs.readFileSync(fullPath);
            res.writeHead(200, { 'Content-Type': contentType });
            res.end(content);
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${error.message}`);
            res.writeHead(500, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(`
                <html>
                    <head><title>500 - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</title></head>
                    <body>
                        <h1>500 - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1>
                        <p>–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: ${error.message}</p>
                        <p>–ü—É—Ç—å: ${filePath}</p>
                    </body>
                </html>
            `);
        }
    } else {
        console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filePath}`);
        
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const indexPath = path.join(__dirname, 'flower-shop', 'index.html');
        const reactCopyPath = path.join(__dirname, 'flower-shop', 'react-copy.html');
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ react-copy.html –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if (filePath === '/' && fs.existsSync(reactCopyPath)) {
            console.log(`üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º React –∫–æ–ø–∏—é –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
            res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(fs.readFileSync(reactCopyPath));
        } else if (fs.existsSync(indexPath)) {
            console.log(`üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–º–µ—Å—Ç–æ ${filePath}`);
            res.writeHead(200, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(fs.readFileSync(indexPath));
        } else {
            console.log(`‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–æ–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!`);
            res.writeHead(404, { 'Content-Type': 'text/html; charset=utf-8' });
            res.end(`
                <html>
                    <head><title>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</title></head>
                    <body>
                        <h1>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
                        <p>Timeweb Cloud —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª –Ω–∞—à —Å–µ—Ä–≤–µ—Ä!</p>
                        <p>–ù–æ —Ñ–∞–π–ª <strong>${filePath}</strong> –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
                        <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:</p>
                        <ul>
                            <li><a href="/">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</a></li>
                            <li><a href="/simple-test.html">–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç</a></li>
                            <li><a href="/cart.html">–ö–æ—Ä–∑–∏–Ω–∞</a></li>
                            <li><a href="/login.html">–í—Ö–æ–¥</a></li>
                        </ul>
                    </body>
                </html>
            `);
        }
    }
});

server.listen(PORT, () => {
    console.log('üöÄ Flower Shop —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ Timeweb Cloud!');
    console.log(`üåê –ü–æ—Ä—Ç: ${PORT}`);
    console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:');
    
    const flowerShopPath = path.join(__dirname, 'flower-shop');
    if (fs.existsSync(flowerShopPath)) {
        const files = fs.readdirSync(flowerShopPath);
        console.log('üìÇ –§–∞–π–ª—ã –≤ flower-shop:', files);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º HTML —Ñ–∞–π–ª—ã –æ—Ç–¥–µ–ª—å–Ω–æ
        const htmlFiles = files.filter(file => file.endsWith('.html'));
        console.log('üå∏ HTML —Ñ–∞–π–ª—ã:', htmlFiles);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const mainPages = ['index.html', 'cart.html', 'login.html', 'profile.html', 'checkout.html'];
        mainPages.forEach(page => {
            const exists = files.includes(page);
            console.log(`${exists ? '‚úÖ' : '‚ùå'} ${page}: ${exists ? '–Ω–∞–π–¥–µ–Ω' : '–ù–ï –Ω–∞–π–¥–µ–Ω'}`);
        });
    } else {
        console.log('‚ùå –ü–∞–ø–∫–∞ flower-shop –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    }
    
    console.log('üåê –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã!');
    console.log('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω Timeweb Cloud');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
server.on('error', (err) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
});

process.on('SIGINT', () => {
    console.log('üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...');
    server.close(() => {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        process.exit(0);
    });
});
